class Product {
    constructor(id, name, price) {
        this.id = id
        this.name = name
        this.price = price
    }
}

class ShoppingCartItem {
    constructor(product, quantity) {
        this.product = product
        this.quantity = quantity
    }

    getTotalPrice() {
        return this.product.price * this.quantity
    }
}

class ShoppingCart {
    constructor() {
        this.items = []
    }

    addItem(product, quantity) {
        const existingItem = this.items.find(item => item.product.id === product.id)
        if (existingItem) {
            existingItem.quantity += quantity;
        } else {
            const newItem = new ShoppingCartItem(product, quantity)
            this.items.push(newItem)
        }
    }

    removeItem(productId) {
        this.items = this.items.filter(item => item.product.id !== productId)
    }

    getTotalItems() {
        return this.items.reduce((total, item) => total + item.quantity, 0)
    }

    getTotalPrice() {
        return this.items.reduce((total, item) => total + item.getTotalPrice(), 0)
    }

    displayCart() {
        if (this.items.length === 0) {
            console.log("The cart is empty.")
        } else {
            console.log("Shopping Cart:")
            this.items.forEach(item => {
                console.log(`*${item.product.name} (x${item.quantity}): $${item.getTotalPrice().toFixed(2)}`)
            })
            console.log(`Total Items: ${this.getTotalItems()}`)
            console.log(`Total Price: $${this.getTotalPrice()}`)
        }
    }
}

const product1 = new Product(1, "Desktop", 1200)
const product2 = new Product(2, "Smart Tv", 800)
const product3 = new Product(3, "Headphones", 150)

const cart = new ShoppingCart()
cart.addItem(product1, 1)
cart.addItem(product2, 2)
cart.addItem(product3, 3)
cart.displayCart()
cart.removeItem(2)
cart.displayCart()
